{"ast":null,"code":"var _jsxFileName = \"/Users/d.dildakhan/Desktop/coronavirus_buildings/project-react/src/components/Table.js\";\nimport React from 'react';\nimport { useTable, useFilters, useGlobalFilter, usePagination, useSortBy } from \"react-table\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst data = Array(100).fill().map(a => ({\n  firstName: firstNames[Math.floor(Math.random() * firstNames.length)],\n  lastName: lastName[Math.floor(Math.random() * lastName.length)],\n  age: Math.ceil(75 * Math.random())\n}));\nconst columns = [{\n  Header: \"District ðŸ”½\",\n  accessor: \"district\",\n  Footer: \"Name\",\n  sortType: \"basic\"\n}, {\n  Header: \"Building ðŸ”½\",\n  accessor: \"building\",\n  Footer: \"Name\",\n  sortType: \"basic\"\n}, {\n  Header: \"Case No. ðŸ”½\",\n  accessor: \"cases\",\n  sortType: \"basic\"\n}, {\n  Header: \"Ages ðŸ”½\",\n  accessor: \"ages\",\n  sortType: \"basic\"\n}, {\n  Header: \"Resident ðŸ”½\",\n  accessor: \"resident\",\n  sortType: \"basic\"\n}, {\n  Header: \"Date ðŸ”½\",\n  accessor: \"date\",\n  sortType: \"basic\"\n}];\n\nconst DefaultColumnFilter = ({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) => {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/React.createElement(\"input\", {\n    value: filterValue || \"\",\n    onChange: e => {\n      setFilter(e.target.value || undefined);\n    },\n    placeholder: `Search ${count} records...`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  });\n};\n\nconst TableData = () => {\n  const filterTypes = React.useMemo(() => ({\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n  const defaultColumn = React.useMemo(() => ({\n    Filter: DefaultColumnFilter\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    visibleColumns,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    defaultColumn,\n    filterTypes,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useFilters, useGlobalFilter, useSortBy, usePagination);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '20px',\n      marginTop: '150px',\n      marginRight: '1000px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaUTable, Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(TableRow, Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(column.getSortByToggleProps()), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }), column.render(\"Header\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, column.isSorted ? column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }, column.canFilter ? column.render(\"Filter\") : null))))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    colSpan: visibleColumns.length,\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(TableRow, Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(TableCell, Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 44\n        }\n      }), cell.render(\"Cell\"));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => gotoPage(0),\n    disabled: !canPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"<<\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => previousPage(),\n    disabled: !canPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"<\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => nextPage(),\n    disabled: !canNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \">\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => gotoPage(pageCount - 1),\n    disabled: !canNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \">>\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"Page\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, pageIndex + 1, \" of \", pageOptions.length), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, \"| Go to page:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: e => {\n      const page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    style: {\n      width: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  })), \" \", /*#__PURE__*/React.createElement(\"select\", {\n    value: pageSize,\n    onChange: e => {\n      setPageSize(Number(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/React.createElement(\"option\", {\n    key: pageSize,\n    value: pageSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"Show \", pageSize)))));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/Users/d.dildakhan/Desktop/coronavirus_buildings/project-react/src/components/Table.js"],"names":["React","useTable","useFilters","useGlobalFilter","usePagination","useSortBy","MaUTable","TableBody","TableCell","TableHead","TableRow","data","Array","fill","map","a","firstName","firstNames","Math","floor","random","length","lastName","age","ceil","columns","Header","accessor","Footer","sortType","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","e","target","value","undefined","TableData","filterTypes","useMemo","text","rows","id","filter","row","rowValue","values","String","toLowerCase","startsWith","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","visibleColumns","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","margin","marginTop","marginRight","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","textAlign","i","getRowProps","cells","cell","getCellProps","Number","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTable, useFilters, useGlobalFilter, usePagination, useSortBy } from \"react-table\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst data = Array(100)\n    .fill()\n    .map(a => ({\n        firstName: firstNames[Math.floor(Math.random() * firstNames.length)],\n        lastName: lastName[Math.floor(Math.random() * lastName.length)],\n        age: Math.ceil(75 * Math.random())\n    }));\n\n\nconst columns = [\n    {\n        Header: \"District ðŸ”½\",\n        accessor: \"district\",\n        Footer: \"Name\",\n        sortType: \"basic\"\n    },\n    {\n        Header: \"Building ðŸ”½\",\n        accessor: \"building\",\n        Footer: \"Name\",\n        sortType: \"basic\"\n    },\n    {\n        Header: \"Case No. ðŸ”½\",\n        accessor: \"cases\",\n        sortType: \"basic\"\n    },\n    {\n        Header: \"Ages ðŸ”½\",\n        accessor: \"ages\",\n        sortType: \"basic\"\n    },\n    {\n        Header: \"Resident ðŸ”½\",\n        accessor: \"resident\",\n        sortType: \"basic\"\n    },\n    {\n        Header: \"Date ðŸ”½\",\n        accessor: \"date\",\n        sortType: \"basic\"\n    }\n]\n\nconst DefaultColumnFilter = ({\n    column: { filterValue, preFilteredRows, setFilter }\n}) => {\n    const count = preFilteredRows.length;\n\n    return (\n        <input\n            value={filterValue || \"\"}\n            onChange={e => {\n                setFilter(e.target.value || undefined);\n            }}\n            placeholder={`Search ${count} records...`}\n        />\n    );\n};\n\n\nconst TableData = () => {\n    const filterTypes = React.useMemo(\n        () => ({\n            text: (rows, id, filterValue) => {\n                return rows.filter(row => {\n                    const rowValue = row.values[id];\n                    return rowValue !== undefined\n                        ? String(rowValue)\n                            .toLowerCase()\n                            .startsWith(String(filterValue).toLowerCase())\n                        : true;\n                });\n            }\n        }),\n        []\n    );\n\n    const defaultColumn = React.useMemo(\n        () => ({\n            Filter: DefaultColumnFilter\n        }),\n        []\n    );\n\n    const {\n\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        visibleColumns,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize }\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn,\n            filterTypes,\n            initialState: { pageIndex: 0 }\n        },\n        useFilters,\n        useGlobalFilter,\n        useSortBy,\n        usePagination\n    );\n\n    return (\n        <div style={{ margin: '20px', marginTop: '150px', marginRight: '1000px' }}>\n            <MaUTable {...getTableProps()}>\n                <TableHead>\n                    {headerGroups.map(headerGroup => (\n                        <TableRow {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render(\"Header\")}\n                                    <span>\n                                        {column.isSorted ? (column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\") : \"\"}\n                                    </span>\n                                    <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                                </th>\n                            ))}\n                        </TableRow>\n                    ))}\n                    <TableRow>\n                        <TableHead\n                            colSpan={visibleColumns.length}\n                            style={{\n                                textAlign: \"left\"\n                            }}\n                        >\n                        </TableHead>\n                    </TableRow>\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                    {rows.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <TableRow {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <TableCell {...cell.getCellProps()}>{cell.render(\"Cell\")}</TableCell>;\n                                })}\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </MaUTable>\n            <div>\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                    {\"<<\"}\n                </button>{\" \"}\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    {\"<\"}\n                </button>{\" \"}\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    {\">\"}\n                </button>{\" \"}\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                    {\">>\"}\n                </button>{\" \"}\n                <span>\n                    Page{\" \"}\n                    <strong>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </strong>{\" \"}\n                </span>\n                <span>\n                    | Go to page:{\" \"}\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                            gotoPage(page);\n                        }}\n                        style={{ width: \"100px\" }}\n                    />\n                </span>{\" \"}\n                <select\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value));\n                    }}\n                >\n                    {[10, 20, 30, 40, 50].map(pageSize => (\n                        <option key={pageSize} value={pageSize}>\n                            Show {pageSize}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </div>\n    );\n};\n\n\n\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}