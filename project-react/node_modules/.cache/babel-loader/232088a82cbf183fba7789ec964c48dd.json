{"ast":null,"code":"var _jsxFileName = \"/Users/d.dildakhan/Desktop/coronavirus_buildings/project-react/src/components/Table.js\";\nimport React from 'react';\nimport { useTable, useSortBy, useFilters, useGlobalFilter, usePagination } from \"react-table\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst data = [{\n  district: \"Wan Chai\",\n  building: \"Block C, Villa Lotto\",\n  cases: \"2\",\n  ages: [\"21\", \"24\"],\n  resident: \"HK Resident\",\n  date: \"05/03/2020\"\n}, {\n  district: \"Tai Po\",\n  building: \"Tower 1, La Grove\",\n  cases: \"1\",\n  ages: [\"45\"],\n  resident: \"Non-local\",\n  date: \"05/04/2020\"\n}, {\n  district: \"Central and Western\",\n  building: \"18 Stanley Main Street\",\n  cases: \"1\",\n  ages: [\"33\"],\n  resident: \"HK Resident\",\n  date: \"11/03/2020\"\n}, {\n  district: \"Wan Chai\",\n  building: \"Block C, Villa Lotto\",\n  cases: \"2\",\n  ages: [\"21\", \"24\"],\n  resident: \"HK Resident\",\n  date: \"05/03/2020\"\n}, {\n  district: \"Tai Po\",\n  building: \"Tower 1, La Grove\",\n  cases: \"1\",\n  ages: [\"45\"],\n  resident: \"Non-local\",\n  date: \"05/04/2020\"\n}, {\n  district: \"Central and Western\",\n  building: \"18 Stanley Main Street\",\n  cases: \"1\",\n  ages: [\"33\"],\n  resident: \"HK Resident\",\n  date: \"11/03/2020\"\n}, {\n  district: \"Wan Chai\",\n  building: \"Block C, Villa Lotto\",\n  cases: \"2\",\n  ages: [\"21\", \"24\"],\n  resident: \"HK Resident\",\n  date: \"05/03/2020\"\n}, {\n  district: \"Tai Po\",\n  building: \"Tower 1, La Grove\",\n  cases: \"1\",\n  ages: [\"45\"],\n  resident: \"Non-local\",\n  date: \"05/04/2020\"\n}, {\n  district: \"Central and Western\",\n  building: \"18 Stanley Main Street\",\n  cases: \"1\",\n  ages: [\"33\"],\n  resident: \"HK Resident\",\n  date: \"11/03/2020\"\n}];\nconst columns = [{\n  Header: \"Name\",\n  columns: [{\n    Header: \"First Name\",\n    accessor: \"firstName\",\n    sortType: \"basic\"\n  }, {\n    Header: \"Last Name\",\n    accessor: \"lastName\",\n    sortType: \"basic\"\n  }]\n}];\n\nconst DefaultColumnFilter = ({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) => {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/React.createElement(\"input\", {\n    value: filterValue || \"\",\n    onChange: e => {\n      setFilter(e.target.value || undefined);\n    },\n    placeholder: `Search ${count} records...`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  });\n};\n\nconst TableData = () => {\n  const filterTypes = React.useMemo(() => ({\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n  const defaultColumn = React.useMemo(() => ({\n    Filter: DefaultColumnFilter\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data,\n    defaultColumn,\n    filterTypes\n  }, useFilters, useGlobalFilter);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '20px',\n      marginTop: '150px',\n      marginRight: '1000px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaUTable, Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(TableRow, Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(column.getSortByToggleProps()), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }), column.render(\"Header\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, column.isSorted ? column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\" : \"\"))))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    colSpan: visibleColumns.length,\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(TableRow, Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(TableCell, Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 44\n        }\n      }), cell.render(\"Cell\"));\n    }));\n  }))));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/Users/d.dildakhan/Desktop/coronavirus_buildings/project-react/src/components/Table.js"],"names":["React","useTable","useSortBy","useFilters","useGlobalFilter","usePagination","MaUTable","TableBody","TableCell","TableHead","TableRow","data","district","building","cases","ages","resident","date","columns","Header","accessor","sortType","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","TableData","filterTypes","useMemo","text","rows","id","filter","row","rowValue","values","String","toLowerCase","startsWith","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","visibleColumns","preGlobalFilteredRows","setGlobalFilter","margin","marginTop","marginRight","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","textAlign","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTable, useSortBy, useFilters, useGlobalFilter, usePagination } from \"react-table\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\n\nconst data = [\n    { district: \"Wan Chai\", building: \"Block C, Villa Lotto\", cases: \"2\", ages: [\"21\", \"24\"], resident: \"HK Resident\", date: \"05/03/2020\" },\n    { district: \"Tai Po\", building: \"Tower 1, La Grove\", cases: \"1\", ages: [\"45\"], resident: \"Non-local\", date: \"05/04/2020\" },\n    { district: \"Central and Western\", building: \"18 Stanley Main Street\", cases: \"1\", ages: [\"33\"], resident: \"HK Resident\", date: \"11/03/2020\" },\n    { district: \"Wan Chai\", building: \"Block C, Villa Lotto\", cases: \"2\", ages: [\"21\", \"24\"], resident: \"HK Resident\", date: \"05/03/2020\" },\n    { district: \"Tai Po\", building: \"Tower 1, La Grove\", cases: \"1\", ages: [\"45\"], resident: \"Non-local\", date: \"05/04/2020\" },\n    { district: \"Central and Western\", building: \"18 Stanley Main Street\", cases: \"1\", ages: [\"33\"], resident: \"HK Resident\", date: \"11/03/2020\" },\n    { district: \"Wan Chai\", building: \"Block C, Villa Lotto\", cases: \"2\", ages: [\"21\", \"24\"], resident: \"HK Resident\", date: \"05/03/2020\" },\n    { district: \"Tai Po\", building: \"Tower 1, La Grove\", cases: \"1\", ages: [\"45\"], resident: \"Non-local\", date: \"05/04/2020\" },\n    { district: \"Central and Western\", building: \"18 Stanley Main Street\", cases: \"1\", ages: [\"33\"], resident: \"HK Resident\", date: \"11/03/2020\" },\n];\n\n\nconst columns = [\n    {\n        Header: \"Name\",\n        columns: [\n            {\n                Header: \"First Name\",\n                accessor: \"firstName\",\n                sortType: \"basic\"\n            },\n            {\n                Header: \"Last Name\",\n                accessor: \"lastName\",\n                sortType: \"basic\"\n            }\n        ]\n    }\n];\n\nconst DefaultColumnFilter = ({\n    column: { filterValue, preFilteredRows, setFilter }\n}) => {\n    const count = preFilteredRows.length;\n\n    return (\n        <input\n            value={filterValue || \"\"}\n            onChange={e => {\n                setFilter(e.target.value || undefined);\n            }}\n            placeholder={`Search ${count} records...`}\n        />\n    );\n};\n\n\nconst TableData = () => {\n    const filterTypes = React.useMemo(\n        () => ({\n            text: (rows, id, filterValue) => {\n                return rows.filter(row => {\n                    const rowValue = row.values[id];\n                    return rowValue !== undefined\n                        ? String(rowValue)\n                            .toLowerCase()\n                            .startsWith(String(filterValue).toLowerCase())\n                        : true;\n                });\n            }\n        }),\n        []\n    );\n\n    const defaultColumn = React.useMemo(\n        () => ({\n            Filter: DefaultColumnFilter\n        }),\n        []\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        visibleColumns,\n        preGlobalFilteredRows,\n        setGlobalFilter\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn,\n            filterTypes\n        },\n        useFilters,\n        useGlobalFilter\n    );\n\n    return (\n        <div style={{ margin: '20px', marginTop: '150px', marginRight: '1000px' }}>\n            <MaUTable {...getTableProps()}>\n                <TableHead>\n                    {headerGroups.map(headerGroup => (\n                        <TableRow {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render(\"Header\")}\n                                    <span>\n                                        {column.isSorted ? (column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\") : \"\"}\n                                    </span>\n                                </th>\n\n                            ))}\n                        </TableRow>\n                    ))}\n                    <TableRow>\n                        <TableHead\n                            colSpan={visibleColumns.length}\n                            style={{\n                                textAlign: \"left\"\n                            }}\n                        >\n                        </TableHead>\n                    </TableRow>\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                    {rows.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <TableRow {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <TableCell {...cell.getCellProps()}>{cell.render(\"Cell\")}</TableCell>;\n                                })}\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </MaUTable>\n        </div>\n    );\n};\n\n\n\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}